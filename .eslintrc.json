{
  "env": {
    "es6": true,
    "browser": true,
    "node": true
  },
  "plugins": [
    "@typescript-eslint",
    "react-hooks",
    "import",
    "json-format",
    "eslint-plugin-no-relative-import-paths"
  ],
  "extends": [
    "next/core-web-vitals",
    "eslint:recommended",
    "airbnb",
    "airbnb-typescript",
    "plugin:react/recommended",
    "plugin:@typescript-eslint/recommended",
    "eslint-config-prettier" // Uses eslint-config-prettier to disable ESLint rules from @typescript-eslint/eslint-plugin that would conflict with prettier
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "module",
    "project": "./tsconfig.json"
  },
  "rules": {
    // Typescript Rules
    "@typescript-eslint/no-explicit-any": "warn",
    "@typescript-eslint/comma-dangle": [
      "off",
      "never"
    ],
    "@typescript-eslint/consistent-type-imports": "warn",
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/indent": "off",
    "@typescript-eslint/naming-convention": "off",
    "@typescript-eslint/no-unused-vars": [
      "warn",
      {
        "argsIgnorePattern": "^_"
      }
    ],
    "@typescript-eslint/quotes": "off",
    // General JavaScript Rules
    "arrow-parens": [
      "off"
    ],
    "camelcase": "off",
    "eqeqeq": "error",
    "import/extensions": [
      "error",
      "ignorePackages",
      {
        "css": "always",
        "jsx": "never",
        "js": "never",
        "scss": "always",
        "ts": "never",
        "tsx": "never"
      }
    ],
    "sort-imports": [
      "warn",
      {
        "ignoreCase": true,
        "ignoreDeclarationSort": true
      }
    ],
    "import/order": [
      "warn",
      {
        "groups": [
          [
            "external",
            "builtin"
          ],
          "internal",
          [
            "parent",
            "sibling"
          ],
          "index",
          "type"
        ],
        "pathGroups": [
          {
            "pattern": "react*",
            "group": "external",
            "position": "before"
          },
          {
            "pattern": "@mui/**",
            "group": "external",
            "position": "before"
          },
          {
            "pattern": "@crema/**",
            "group": "internal",
            "position": "before"
          },
          {
            "pattern": "(api|hooks|modules|redux|shared|styles|utils)/**",
            "group": "internal"
          }
        ],
        "pathGroupsExcludedImportTypes": [
          "react"
        ],
        "newlines-between": "always",
        "alphabetize": {
          "order": "asc",
          "caseInsensitive": true
        }
      }
    ],
    "import/no-cycle": "error",
    "import/no-unresolved": "off",
    "import/prefer-default-export": "off",
    "linebreak-style": "off",
    "max-len": [
      "warn",
      {
        "code": 120,
        "ignorePattern": "^import .*"
      }
    ],
    "max-params": [
      "error",
      3
    ],
    "no-console": "warn",
    "no-var": "error",
    "no-debugger": "error",
    "no-relative-import-paths/no-relative-import-paths": [
      "warn",
      {
        "allowSameFolder": true,
        "rootDir": "src"
      }
    ],
    "no-restricted-imports": [
      "error",
      {
        "name": "lodash",
        "message": "Please use import [function] from 'lodash/[function];"
      }
    ],
    "no-plusplus": [
      "warn",
      {
        "allowForLoopAfterthoughts": true
      }
    ],
    "no-shadow": "warn",
    "no-underscore-dangle": "off",
    "no-unused-vars": "warn",
    "no-use-before-define": "warn",
    // React Rules
    "react/prop-types": "off", // Since we do not use prop-types
    "react/require-default-props": "off", // Since we do not use prop-types,
    "react/function-component-definition": [
      2,
      {
        "namedComponents": "arrow-function",
        "unnamedComponents": "arrow-function"
      }
    ],
    "react/react-in-jsx-scope": "off",
    "react/jsx-one-expression-per-line": [
      "off"
    ],
    "react/jsx-props-no-spreading": "warn",
    "react/jsx-indent": "off",
    "react/jsx-wrap-multilines": "off",
    "react/jsx-filename-extension": [
      1,
      {
        "extensions": [
          ".js",
          ".ts",
          ".jsx",
          ".tsx"
        ]
      }
    ],
    // React Hooks Rules
    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": "warn"
  },
  "overrides": [
    {
      // enable the rule specifically for TypeScript files
      "files": [
        "*.ts"
      ],
      "rules": {
        "@typescript-eslint/explicit-function-return-type": [
          "warn"
        ]
      }
    }
  ],
  "ignorePatterns": [
    "precommit-checks.js"
  ]
}