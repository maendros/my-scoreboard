// Define your schema and provider
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// Existing User model
model User {
  id          Int        @id @default(autoincrement())
  name        String
  email       String     @unique
  matchesHome Match[]    @relation("MatchHome")
  matchesAway Match[]    @relation("MatchAway")
  userTeams   UserTeam[] @relation("UserTeams")
}

// New Team model
model Team {
  id        Int        @id @default(autoincrement())
  name      String
  userTeams UserTeam[] @relation("TeamUserTeams")
}

// Existing Match model with new fields
model Match {
  id         Int        @id @default(autoincrement())
  homeTeamId Int
  awayTeamId Int
  homeTeam   User       @relation("MatchHome", fields: [homeTeamId], references: [id])
  awayTeam   User       @relation("MatchAway", fields: [awayTeamId], references: [id])
  homeScore  Int
  awayScore  Int
  playedAt   DateTime   @default(now())
  userTeams  UserTeam[] @relation("MatchUserTeams")
}

// Updated UserTeam model with optional fields
model UserTeam {
  id       Int     @id @default(autoincrement())
  userId   Int? // Make userId optional
  teamId   Int? // Make teamId optional
  matchId  Int? // Make matchId optional
  isWinner Boolean
  user     User?   @relation("UserTeams", fields: [userId], references: [id])
  team     Team?   @relation("TeamUserTeams", fields: [teamId], references: [id])
  match    Match?  @relation("MatchUserTeams", fields: [matchId], references: [id])
}
